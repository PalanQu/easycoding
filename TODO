- config部分使用反射支持default值
- 数据库migrate
- 支持空文件migrate
- 时间戳前面加一个版本号
- 支持verify本地版本和数据库版本的对齐性
- 支持当前数据库版本和migrations的diff
- 支持将dirty转为false
- benchmark
- 增加protobuf breaking change检测
- fix linter报的错误
- 集成测试
- rbac
- config中加入max msg size
- 测试shutdown
- sql quote in test
- fix stop
- 管理googleapis，两种方式，一种是直接引用upstream的proto，另一种是搞一个sync script
- config using protobuf
- property based test
- graphql

done features:

- swagger 文档
- prometheus metrics
- client and server code generate
- proto validate
- postman import
- grpc and restful

- run in docker
- 支持mysql
- golang 配置管理, 生成配置
- makefile
- orm
- fix linter, golang and protobuf
- error分级
- 日志打印request，与日志等级关系
- 单元测试、测试覆盖率
- 错误error管理
- commitlint, go commitlint, protobuf commitlint
- graceful stop
- common中的error可以打印出来
- 增加版本号  -v命令
- makefile要支持只启动所有依赖，并且重新编译代码后启动，如果重启，不去重启依赖部分
- makefile支持参数 增加重新build的docker image选项

done coding style:
- serve应该在cmd包中完成，而不是internal/app/server.go
- 将swagger和prometheus 与其他接口分开
- 不生成api/google
- 使用cmd manage管理config、db、protobuf
- gorm log统一日志
- 日志格式
- 删掉返回值中的stacktrace


日志的需求：
1. 当有error产生，可以把request和错误的调用栈打印出来
